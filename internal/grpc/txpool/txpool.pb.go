// Code generated by protoc-gen-go. DO NOT EDIT.
// source: txpool/txpool.proto
package txpool
import (
	context "context"
	fmt "fmt"
	utils "github.com/Aurorachain/go-aoa/internal/grpc/utils"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)
// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
type ContentRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *ContentRequest) Reset()         { *m = ContentRequest{} }
func (m *ContentRequest) String() string { return proto.CompactTextString(m) }
func (*ContentRequest) ProtoMessage()    {}
func (*ContentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{0}
}
func (m *ContentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentRequest.Unmarshal(m, b)
}
func (m *ContentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentRequest.Marshal(b, m, deterministic)
}
func (m *ContentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentRequest.Merge(m, src)
}
func (m *ContentRequest) XXX_Size() int {
	return xxx_messageInfo_ContentRequest.Size(m)
}
func (m *ContentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentRequest.DiscardUnknown(m)
}
var xxx_messageInfo_ContentRequest proto.InternalMessageInfo
type ContentReply struct {
	Pending              map[string]*ContentPending `protobuf:"bytes,1,rep,name=pending,proto3" json:"pending,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Queued               map[string]*ContentQueued  `protobuf:"bytes,2,rep,name=queued,proto3" json:"queued,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}
func (m *ContentReply) Reset()         { *m = ContentReply{} }
func (m *ContentReply) String() string { return proto.CompactTextString(m) }
func (*ContentReply) ProtoMessage()    {}
func (*ContentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{1}
}
func (m *ContentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentReply.Unmarshal(m, b)
}
func (m *ContentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentReply.Marshal(b, m, deterministic)
}
func (m *ContentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentReply.Merge(m, src)
}
func (m *ContentReply) XXX_Size() int {
	return xxx_messageInfo_ContentReply.Size(m)
}
func (m *ContentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentReply.DiscardUnknown(m)
}
var xxx_messageInfo_ContentReply proto.InternalMessageInfo
func (m *ContentReply) GetPending() map[string]*ContentPending {
	if m != nil {
		return m.Pending
	}
	return nil
}
func (m *ContentReply) GetQueued() map[string]*ContentQueued {
	if m != nil {
		return m.Queued
	}
	return nil
}
type ContentPending struct {
	Data                 map[string]*utils.RpcTransaction `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}
func (m *ContentPending) Reset()         { *m = ContentPending{} }
func (m *ContentPending) String() string { return proto.CompactTextString(m) }
func (*ContentPending) ProtoMessage()    {}
func (*ContentPending) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{2}
}
func (m *ContentPending) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentPending.Unmarshal(m, b)
}
func (m *ContentPending) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentPending.Marshal(b, m, deterministic)
}
func (m *ContentPending) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentPending.Merge(m, src)
}
func (m *ContentPending) XXX_Size() int {
	return xxx_messageInfo_ContentPending.Size(m)
}
func (m *ContentPending) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentPending.DiscardUnknown(m)
}
var xxx_messageInfo_ContentPending proto.InternalMessageInfo
func (m *ContentPending) GetData() map[string]*utils.RpcTransaction {
	if m != nil {
		return m.Data
	}
	return nil
}
type ContentQueued struct {
	Data                 map[string]*utils.RpcTransaction `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}
func (m *ContentQueued) Reset()         { *m = ContentQueued{} }
func (m *ContentQueued) String() string { return proto.CompactTextString(m) }
func (*ContentQueued) ProtoMessage()    {}
func (*ContentQueued) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{3}
}
func (m *ContentQueued) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentQueued.Unmarshal(m, b)
}
func (m *ContentQueued) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentQueued.Marshal(b, m, deterministic)
}
func (m *ContentQueued) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentQueued.Merge(m, src)
}
func (m *ContentQueued) XXX_Size() int {
	return xxx_messageInfo_ContentQueued.Size(m)
}
func (m *ContentQueued) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentQueued.DiscardUnknown(m)
}
var xxx_messageInfo_ContentQueued proto.InternalMessageInfo
func (m *ContentQueued) GetData() map[string]*utils.RpcTransaction {
	if m != nil {
		return m.Data
	}
	return nil
}
type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{4}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}
var xxx_messageInfo_StatusRequest proto.InternalMessageInfo
type StatusReply struct {
	Result               map[string]int32 `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}
func (m *StatusReply) Reset()         { *m = StatusReply{} }
func (m *StatusReply) String() string { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()    {}
func (*StatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{5}
}
func (m *StatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusReply.Unmarshal(m, b)
}
func (m *StatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusReply.Marshal(b, m, deterministic)
}
func (m *StatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusReply.Merge(m, src)
}
func (m *StatusReply) XXX_Size() int {
	return xxx_messageInfo_StatusReply.Size(m)
}
func (m *StatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusReply.DiscardUnknown(m)
}
var xxx_messageInfo_StatusReply proto.InternalMessageInfo
func (m *StatusReply) GetResult() map[string]int32 {
	if m != nil {
		return m.Result
	}
	return nil
}
type InspectRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}
func (m *InspectRequest) Reset()         { *m = InspectRequest{} }
func (m *InspectRequest) String() string { return proto.CompactTextString(m) }
func (*InspectRequest) ProtoMessage()    {}
func (*InspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{6}
}
func (m *InspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectRequest.Unmarshal(m, b)
}
func (m *InspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectRequest.Marshal(b, m, deterministic)
}
func (m *InspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectRequest.Merge(m, src)
}
func (m *InspectRequest) XXX_Size() int {
	return xxx_messageInfo_InspectRequest.Size(m)
}
func (m *InspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectRequest.DiscardUnknown(m)
}
var xxx_messageInfo_InspectRequest proto.InternalMessageInfo
type InspectReply struct {
	Pending              map[string]*InspectPending `protobuf:"bytes,1,rep,name=pending,proto3" json:"pending,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Queued               map[string]*InspectQueued  `protobuf:"bytes,2,rep,name=queued,proto3" json:"queued,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}
func (m *InspectReply) Reset()         { *m = InspectReply{} }
func (m *InspectReply) String() string { return proto.CompactTextString(m) }
func (*InspectReply) ProtoMessage()    {}
func (*InspectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{7}
}
func (m *InspectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectReply.Unmarshal(m, b)
}
func (m *InspectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectReply.Marshal(b, m, deterministic)
}
func (m *InspectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectReply.Merge(m, src)
}
func (m *InspectReply) XXX_Size() int {
	return xxx_messageInfo_InspectReply.Size(m)
}
func (m *InspectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectReply.DiscardUnknown(m)
}
var xxx_messageInfo_InspectReply proto.InternalMessageInfo
func (m *InspectReply) GetPending() map[string]*InspectPending {
	if m != nil {
		return m.Pending
	}
	return nil
}
func (m *InspectReply) GetQueued() map[string]*InspectQueued {
	if m != nil {
		return m.Queued
	}
	return nil
}
type InspectPending struct {
	Data                 map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}
func (m *InspectPending) Reset()         { *m = InspectPending{} }
func (m *InspectPending) String() string { return proto.CompactTextString(m) }
func (*InspectPending) ProtoMessage()    {}
func (*InspectPending) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{8}
}
func (m *InspectPending) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectPending.Unmarshal(m, b)
}
func (m *InspectPending) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectPending.Marshal(b, m, deterministic)
}
func (m *InspectPending) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectPending.Merge(m, src)
}
func (m *InspectPending) XXX_Size() int {
	return xxx_messageInfo_InspectPending.Size(m)
}
func (m *InspectPending) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectPending.DiscardUnknown(m)
}
var xxx_messageInfo_InspectPending proto.InternalMessageInfo
func (m *InspectPending) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}
type InspectQueued struct {
	Data                 map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}
func (m *InspectQueued) Reset()         { *m = InspectQueued{} }
func (m *InspectQueued) String() string { return proto.CompactTextString(m) }
func (*InspectQueued) ProtoMessage()    {}
func (*InspectQueued) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fb604af3dfc4326, []int{9}
}
func (m *InspectQueued) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectQueued.Unmarshal(m, b)
}
func (m *InspectQueued) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectQueued.Marshal(b, m, deterministic)
}
func (m *InspectQueued) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectQueued.Merge(m, src)
}
func (m *InspectQueued) XXX_Size() int {
	return xxx_messageInfo_InspectQueued.Size(m)
}
func (m *InspectQueued) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectQueued.DiscardUnknown(m)
}
var xxx_messageInfo_InspectQueued proto.InternalMessageInfo
func (m *InspectQueued) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}
func init() {
	proto.RegisterType((*ContentRequest)(nil), "txpool.ContentRequest")
	proto.RegisterType((*ContentReply)(nil), "txpool.ContentReply")
	proto.RegisterMapType((map[string]*ContentPending)(nil), "txpool.ContentReply.PendingEntry")
	proto.RegisterMapType((map[string]*ContentQueued)(nil), "txpool.ContentReply.QueuedEntry")
	proto.RegisterType((*ContentPending)(nil), "txpool.ContentPending")
	proto.RegisterMapType((map[string]*utils.RpcTransaction)(nil), "txpool.ContentPending.DataEntry")
	proto.RegisterType((*ContentQueued)(nil), "txpool.ContentQueued")
	proto.RegisterMapType((map[string]*utils.RpcTransaction)(nil), "txpool.ContentQueued.DataEntry")
	proto.RegisterType((*StatusRequest)(nil), "txpool.StatusRequest")
	proto.RegisterType((*StatusReply)(nil), "txpool.StatusReply")
	proto.RegisterMapType((map[string]int32)(nil), "txpool.StatusReply.ResultEntry")
	proto.RegisterType((*InspectRequest)(nil), "txpool.InspectRequest")
	proto.RegisterType((*InspectReply)(nil), "txpool.InspectReply")
	proto.RegisterMapType((map[string]*InspectPending)(nil), "txpool.InspectReply.PendingEntry")
	proto.RegisterMapType((map[string]*InspectQueued)(nil), "txpool.InspectReply.QueuedEntry")
	proto.RegisterType((*InspectPending)(nil), "txpool.InspectPending")
	proto.RegisterMapType((map[string]string)(nil), "txpool.InspectPending.DataEntry")
	proto.RegisterType((*InspectQueued)(nil), "txpool.InspectQueued")
	proto.RegisterMapType((map[string]string)(nil), "txpool.InspectQueued.DataEntry")
}
func init() { proto.RegisterFile("txpool/txpool.proto", fileDescriptor_0fb604af3dfc4326) }
var fileDescriptor_0fb604af3dfc4326 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0xad, 0x33, 0x96, 0xa9, 0x5f, 0xd6, 0x51, 0x79, 0x5b, 0x15, 0xe5, 0x42, 0xc8, 0xa9, 0x12,
	0x28, 0x93, 0x3a, 0xc4, 0x36, 0x38, 0x02, 0x07, 0x2e, 0xa8, 0x84, 0xfd, 0x01, 0x93, 0x5a, 0x28,
	0x22, 0xb3, 0xd3, 0xc4, 0x41, 0xed, 0x01, 0x21, 0xfe, 0x03, 0xe2, 0x4f, 0x70, 0xe7, 0xf7, 0xa1,
	0xda, 0x6e, 0x64, 0x27, 0xa1, 0x80, 0x54, 0x4e, 0x6d, 0xbe, 0xbc, 0xef, 0x7d, 0xcf, 0xf6, 0x7b,
	0x0e, 0x9c, 0x8a, 0x55, 0xc1, 0x79, 0x7e, 0xa1, 0x7e, 0xe2, 0xa2, 0xe4, 0x82, 0x63, 0x57, 0x3d,
	0x05, 0xb8, 0x16, 0x59, 0x5e, 0x5d, 0xa4, 0xfc, 0xee, 0x8e, 0x33, 0xf5, 0x2e, 0x1a, 0xc3, 0xc9,
	0x0b, 0xce, 0x04, 0x65, 0x22, 0xa1, 0xcb, 0x9a, 0x56, 0x22, 0xfa, 0xe1, 0xc0, 0x71, 0x53, 0x2a,
	0xf2, 0x35, 0x7e, 0x0e, 0x47, 0x05, 0x65, 0x8b, 0x8c, 0x7d, 0xf0, 0x51, 0x78, 0x30, 0xf5, 0x66,
	0x0f, 0x63, 0x4d, 0x6f, 0xc2, 0xe2, 0xb9, 0xc2, 0xbc, 0x62, 0xa2, 0x5c, 0x27, 0xdb, 0x0e, 0x7c,
	0x0d, 0xee, 0xb2, 0xa6, 0x35, 0x5d, 0xf8, 0x8e, 0xec, 0x0d, 0x7b, 0x7b, 0xdf, 0x4a, 0x88, 0x6a,
	0xd5, 0xf8, 0x20, 0x81, 0x63, 0x93, 0x12, 0x8f, 0xe1, 0xe0, 0x23, 0x5d, 0xfb, 0x28, 0x44, 0xd3,
	0x61, 0xb2, 0xf9, 0x8b, 0x1f, 0xc3, 0xe1, 0x27, 0x92, 0xd7, 0xd4, 0x77, 0x42, 0x34, 0xf5, 0x66,
	0x93, 0x16, 0xb5, 0xee, 0x4e, 0x14, 0xe8, 0x99, 0x73, 0x8d, 0x82, 0x39, 0x78, 0xc6, 0xa8, 0x1e,
	0xca, 0x47, 0x36, 0xe5, 0x79, 0x8b, 0x52, 0x35, 0x1b, 0x8c, 0xd1, 0x77, 0xd4, 0x6c, 0xa0, 0x9e,
	0x87, 0x9f, 0xc0, 0xbd, 0x05, 0x11, 0x44, 0x6f, 0x56, 0xd8, 0xaf, 0x2a, 0x7e, 0x49, 0x04, 0x51,
	0x0b, 0x96, 0xe8, 0xe0, 0x0d, 0x0c, 0x9b, 0xd2, 0xdf, 0x08, 0x93, 0x67, 0x19, 0x27, 0x45, 0x7a,
	0x5b, 0x12, 0x56, 0x91, 0x54, 0x64, 0x9c, 0x99, 0xc2, 0xbe, 0x21, 0x18, 0x59, 0xaa, 0xf1, 0xa5,
	0xa5, 0xeb, 0x41, 0xef, 0xd2, 0xfe, 0xbb, 0xac, 0xfb, 0x30, 0x7a, 0x27, 0x88, 0xa8, 0xab, 0xad,
	0xdd, 0xbe, 0x22, 0xf0, 0xb6, 0x95, 0x8d, 0xdb, 0xae, 0xc0, 0x2d, 0x69, 0x55, 0xe7, 0xa2, 0xad,
	0xd3, 0x00, 0xc5, 0x89, 0x44, 0x68, 0xbf, 0x28, 0x78, 0x70, 0x03, 0x9e, 0x51, 0xee, 0xd1, 0x7a,
	0x66, 0x6a, 0x3d, 0x34, 0x45, 0x8d, 0xe1, 0xe4, 0x35, 0xab, 0x0a, 0x9a, 0x5a, 0x21, 0x68, 0x4a,
	0xbb, 0x43, 0x60, 0xc2, 0xfe, 0x35, 0x04, 0x56, 0xef, 0x7e, 0x43, 0xa0, 0xa9, 0xf7, 0x19, 0x02,
	0x4d, 0xd9, 0x0d, 0xc1, 0x97, 0x66, 0xff, 0xfe, 0x90, 0x01, 0x1b, 0xd5, 0x31, 0xdb, 0xd5, 0x6e,
	0xb3, 0x59, 0x07, 0x38, 0x34, 0x05, 0x7c, 0x86, 0x91, 0x25, 0xee, 0x77, 0x5e, 0xb7, 0x40, 0x7b,
	0x1b, 0x3f, 0xfb, 0x89, 0xc0, 0xbd, 0x5d, 0xcd, 0x39, 0xcf, 0xf1, 0x0d, 0x1c, 0xa5, 0x2a, 0x50,
	0x78, 0xd2, 0xb9, 0xea, 0xa4, 0xb7, 0x82, 0xb3, 0xbe, 0x2b, 0x30, 0x1a, 0xe0, 0xa7, 0xe0, 0x56,
	0xd2, 0xe3, 0xf8, 0xbc, 0xed, 0x79, 0xd5, 0x78, 0xda, 0x13, 0x85, 0x68, 0xb0, 0x19, 0x99, 0xa9,
	0x75, 0xe1, 0x49, 0xc7, 0x58, 0xad, 0x91, 0xa6, 0xe1, 0xa2, 0xc1, 0x7b, 0x57, 0x7e, 0x04, 0x2e,
	0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x18, 0x9a, 0x31, 0x37, 0x06, 0x00, 0x00,
}
// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn
// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4
// TxPoolClient is the client API for TxPool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TxPoolClient interface {
	Content(ctx context.Context, in *ContentRequest, opts ...grpc.CallOption) (*ContentReply, error)
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusReply, error)
	Inspect(ctx context.Context, in *InspectRequest, opts ...grpc.CallOption) (*InspectReply, error)
}
type txPoolClient struct {
	cc *grpc.ClientConn
}
func NewTxPoolClient(cc *grpc.ClientConn) TxPoolClient {
	return &txPoolClient{cc}
}
func (c *txPoolClient) Content(ctx context.Context, in *ContentRequest, opts ...grpc.CallOption) (*ContentReply, error) {
	out := new(ContentReply)
	err := c.cc.Invoke(ctx, "/txpool.TxPool/content", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *txPoolClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusReply, error) {
	out := new(StatusReply)
	err := c.cc.Invoke(ctx, "/txpool.TxPool/status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
func (c *txPoolClient) Inspect(ctx context.Context, in *InspectRequest, opts ...grpc.CallOption) (*InspectReply, error) {
	out := new(InspectReply)
	err := c.cc.Invoke(ctx, "/txpool.TxPool/inspect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
// TxPoolServer is the server API for TxPool service.
type TxPoolServer interface {
	Content(context.Context, *ContentRequest) (*ContentReply, error)
	Status(context.Context, *StatusRequest) (*StatusReply, error)
	Inspect(context.Context, *InspectRequest) (*InspectReply, error)
}
// UnimplementedTxPoolServer can be embedded to have forward compatible implementations.
type UnimplementedTxPoolServer struct {
}
func (*UnimplementedTxPoolServer) Content(ctx context.Context, req *ContentRequest) (*ContentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Content not implemented")
}
func (*UnimplementedTxPoolServer) Status(ctx context.Context, req *StatusRequest) (*StatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedTxPoolServer) Inspect(ctx context.Context, req *InspectRequest) (*InspectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Inspect not implemented")
}
func RegisterTxPoolServer(s *grpc.Server, srv TxPoolServer) {
	s.RegisterService(&_TxPool_serviceDesc, srv)
}
func _TxPool_Content_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxPoolServer).Content(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txpool.TxPool/Content",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxPoolServer).Content(ctx, req.(*ContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _TxPool_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxPoolServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txpool.TxPool/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxPoolServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}
func _TxPool_Inspect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InspectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxPoolServer).Inspect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txpool.TxPool/Inspect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxPoolServer).Inspect(ctx, req.(*InspectRequest))
	}
	return interceptor(ctx, in, info, handler)
}
var _TxPool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "txpool.TxPool",
	HandlerType: (*TxPoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "content",
			Handler:    _TxPool_Content_Handler,
		},
		{
			MethodName: "status",
			Handler:    _TxPool_Status_Handler,
		},
		{
			MethodName: "inspect",
			Handler:    _TxPool_Inspect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "txpool/txpool.proto",
}
